mutate(R_per_game = R / G, SB_per_game = SB / G) %>%
tidy(lm(SB_per_game ~ R_per_game, data = .))
res_1B <- Teams %>% filter(yearID == 1961) %>%
mutate(R_per_game = R / G, SB_per_game = SB / G) %>%
lm(SB_per_game ~ R_per_game, data =.)
summary(res_1B)
tidy(res_1B)
tidy(res_1B, conf.int = TRUE)
res_1B$model
res_1B <- Teams %>% filter(yearID == 1999) %>%
mutate(R_per_game = R / G, SB_per_game = SB / G) %>%
lm(SB_per_game ~ R_per_game, data =.)
summary(res_1B)
Teams %>% filter(yearID == 1999)
res_1B$coefficients
tidy(res_1B, conf.int = TRUE)
res_1C <- Teams %>% filter(yearID == 1999) %>%
mutate(R_per_game = R / G, SB_per_game = SB / G) %>%
lm(SB_per_game ~ R_per_game, data =.)
summary(res_1C)
tidy(res_1C, conf.int = TRUE)
res_1B$coefficients
res_1D <- Teams %>% filter(yearID == 2002) %>%
mutate(R_per_game = R / G, BB_per_game = BB / G) %>%
lm(BB_per_game ~ R_per_game, data =.)
summary(res_1D)
tidy(res_1D, conf.int = TRUE)
Batting %>%
filter(yearID >= 1961 & BB+AB > 500 & !is.na(HR) & !is.na(BB)) %>%
mutate(HR = factor(pmin(HR, 40))) %>%
ggplot(aes(HR, BB)) +
geom_boxplot()
?pmin
?factor
Teams %>% filter(yearID >= 1961) %>% mutate(HRf = factor(pmin(HR, 10)))
HRf
Teams %>% filter(yearID >= 1961) %>% mutate(HRf = factor(pmin(HR, 10))) %>% group_by(HRf) %>%
ggplot(aes(HRf, BB)) +
geom_boxplot()
Teams %>% filter(yearID >= 1961) %>% mutate(HRf = factor(HR, 10)) %>% group_by(HRf) %>%
ggplot(aes(HRf, BB)) +
geom_boxplot()
Teams %>% filter(yearID >= 1961) %>% mutate(HRf = factor(HR, 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
factor(Teams$HR, 10)
factor(Teams$HR, nmax=10)
factor(Teams$HR)
factor(Teams$HR, 10)
?factor
factor(pmin(Teams$HR, 10)
factor(pmin(Teams$HR, 10))
factor(pmin(Teams$HR, 10))
Batting %>%
filter(yearID >= 1961 & BB+AB > 500 & !is.na(HR) & !is.na(BB)) %>%
mutate(HR = factor(pmin(HR, 40))) %>%
ggplot(aes(HR, BB)) +
geom_boxplot()
View(Batting)
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(HR, 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(HR), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
?cut
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
?quantile
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(Batting$HR, levels = 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(Batting$HR, levels = 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(Batting$HR, levels = 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Teams %>% filter(yearID >= 1961) %>% mutate(HRf = factor(Batting$HR, levels = 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(pmin(Batting$HR, levels = 10)), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
factor(pmin(Teams$HR, 10))
factor((Teams$HR, levels = 10))
factor((Battin$HR, levels = 10))
factor(Batting$HR, levels = 10)
factor(Batting$HR, nmax = 10)
factor(Batting$HR, levels = HR, nmax = 10 )
factor(Batting$HR, levels = Batting$HR, nmax = 10 )
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = factor(Batting$HR, levels = Batting$HR, nmax = 10), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, quantile(Batting$HR), include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
?cut
?quantile
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, quantile(Batting$HR), include.lowest=TRUE, na.rm = TRUE), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, quantile(Batting$HR, na.rm = TRUE), include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, unique(quantile(Batting$HR, na.rm = TRUE)), include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
cut(Batting$HR, unique(quantile(Batting$HR, na.rm = TRUE))
cut(Batting$HR, unique(quantile(Batting$HR, na.rm = TRUE)))
cut(Batting$HR, unique(quantile(Batting$HR, na.rm = TRUE)))
cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1)), na.rm = TRUE)))
cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1)), na.rm = TRUE))
cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)))
cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE))include.lowest=TRUE)
cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE)
Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HRf) %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HRf = cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HRf)
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HR_group)
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(Batting$HR, unique(quantile(Batting$HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G)
plot_1E <- Batting %>% filter(yearID >= 1961)
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(HR, unique(quantile(HR, prob = seq(0,1,.1), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HR_group)
plot_1E %>%
ggplot(aes(HRf, BB_per_game)) +
geom_boxplot()
plot_1E %>%
ggplot(aes(HR_group, BB_per_game)) +
geom_boxplot()
?quantile
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(HR, unique(quantile(HR, prob = seq(0,1,.01), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HR_group)
plot_1E %>%
ggplot(aes(HR_group, BB_per_game)) +
geom_boxplot()
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(HR, unique(quantile(HR, prob = seq(0,1,.05), na.rm = TRUE)),include.lowest=TRUE), BB_per_game = BB / G) %>%
group_by(HR_group)
plot_1E %>%
ggplot(aes(HR_group, BB_per_game)) +
geom_boxplot()
plot_1E <- Batting %>% filter(yearID >= 1961) %>% mutate(HR_group = cut(HR, unique(quantile(HR, prob = seq(0,1,.05), na.rm = TRUE)),include.lowest=FALSE), BB_per_game = BB / G) %>%
group_by(HR_group)
plot_1E %>%
ggplot(aes(HR_group, BB_per_game)) +
geom_boxplot()
Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, HR = HR / G) %>%
ggplot(aes(HR, R)) +
geom_point()
fit <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G, HR = HR / G) %>%
lm(R ~ BB + HR, data = .)
summary(fit)
fit <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G, HR = HR / G) %>%
lm(R ~ BB + HR, data = .)
summary(fit)
Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, HR = HR / G) %>%
ggplot(aes(HR, R)) +
geom_point()
fit <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G, HR = HR / G) %>%
lm(R ~ BB + HR, data = .)
summary(fit)
fit_1F <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G,
Singles = (H - X2B - X3B - HR) / G,
XB = (X2B + X3B) / G, HR = HR / G) %>%
lm(R ~ BB + Singles + XB + HR, data = .)
summary(fit_1F)
fit_1F <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G,
Singles = (H - X2B - X3B - HR) / G,
XB = (X2B + X3B) / G, HR = HR / G) %>%
group_by(yearID) %>%
do(mod = lm(R ~ BB + Singles + XB + HR, data = .))
summary(fit_1F)
fit_1F
summary(fit_1F)
fit_1F
fit_1F$yearID == 1961
fit_1F$yearID[1961]
summary(fit_1F$yearID[1961])
summary(fit_1F$yearID[1966])
summary(fit_1F)
fit_1F
summary(fit_1F)
fit_1F$yearID[1966]
summary(fit_1F)
summary(fit_1F)
fit_1F$yearID[1966]
summary(fit_1F$yearID[1966])
summary(fit_1F)
fit_1F <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G,
Singles = (H - X2B - X3B - HR) / G,
XB = (X2B + X3B) / G, HR = HR / G) %>%
group_by(yearID) %>%
do(lm(R ~ BB + Singles + XB + HR, data = .))
fit_1F <- Teams %>%
filter(yearID >= 1961) %>%
mutate(R = R / G, BB = BB / G,
Singles = (H - X2B - X3B - HR) / G,
XB = (X2B + X3B) / G, HR = HR / G) %>%
group_by(yearID) %>%
do(mod = lm(R ~ BB + Singles + XB + HR, data = .))
fit_1F$mod
summary(fit_1F$mod)
library(gridExtra)
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor(R_per_game, SB_per_game)
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor(R_per_game, SB_per_game)
tab <- Teams %>% filter(yearID == 1999 ) %>%
mutate(R_per_game = R / G, SB_per_game = SB / G)
tab %>% ggplot(aes(SB_per_game, R_per_game)) + geom_point()
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor(R_per_game, SB_per_game)
library(gridExtra)
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor(R_per_game, SB_per_game)
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor((R / G), (SB / G))
r <- Teams %>% filter(yearID == 1999 ) %>% mutate(R_per_game = R / G, SB_per_game = SB / G) %>% cor((Teams$R / Teams$G), (Teams$SB / Teams$G))
r <- Teams %>% filter(yearID == 1999 ) %>% cor((Teams$R / Teams$G), (Teams$SB / Teams$G))
tab <- Teams %>% filter(yearID == 1999 ) %>%
mutate(R_per_game = R / G, SB_per_game = SB / G)
tab %>% ggplot(aes(SB_per_game, R_per_game)) + geom_point()
r <- cor(tab$R_per_game, tab$SB_per_game) #Find the slope
mu_y <- mean(tab$R_per_game) # Find the Y intercept, on non-standardized data
tab %>% ggplot(aes(SB_per_game, R_per_game)) + geom_point() +
geom_abline(intercept = mu_y, slope = r , col="blue")
## We can use ifelse if you have not seen the revalue function
my_salaries <- Salaries %>%
mutate(teamID = as.character(plyr::revalue(teamID, c(SFG = "SFN", NYM = "NYN"))))
summary(fit_1F$mod)
View(my_salaries)
?group_by
View(my_salaries)
my_salaries %>% group_by(teamID, yearID)
my_salaries %>% group_by(teamID, yearID) %>% summarise(salary)
my_salaries %>% group_by(teamID) %>% group_by(yearID) %>% summarise(salary)
my_salaries %>% group_by(teamID, yearID)
?sum
my_salaries %>% group_by(teamID, yearID) %>% sum(salary)
my_salaries %>% group_by(teamID, yearID)
payroll <- my_salaries %>% group_by(teamID, yearID) %>% summarize(sum(salary))
payroll
payroll %>% ggplot(aes(yearID, payroll$`sum(salary)`)) +
geom_point()
payroll %>% ggplot(aes(yearID, payroll$`sum(salary)`), color = factor(teamID)) +
geom_point()
payroll %>% ggplot(aes(yearID, payroll$`sum(salary)`), color = teamID) +
geom_point()
?log
payroll %>% ggplot(aes(log(yearID), log(payroll$`sum(salary)`)), color = teamID) +
geom_point()
payroll %>% ggplot(aes(yearID, log(payroll$`sum(salary)`)), color = teamID) +
geom_point()
payroll %>% ggplot(aes(yearID, log(payroll$`sum(salary)`)), color = factor(payroll$teamID)) +
geom_point()
library(ggplot2)
payroll <- my_salaries %>% group_by(teamID, yearID) %>% summarize(sum(salary))
payroll %>% ggplot(aes(yearID, log(payroll$`sum(salary)`)), color = factor(payroll$teamID)) +
geom_point()
Credit for assistance: http://stackoverflow.com/questions/1660124/how-to-sum-a-variable-by-group
?left_join
View(payroll)
?Teams
test <- payroll
View(Teams)
left_join(test, Teams[ , c("teamID", "yearID", "L", "W")], by = c("teamID", "yearID"))
test
left_join(test, Teams[ , c("teamID", "yearID", "L", "W")], by = c("teamID", "yearID"), all.x=T)
test
left_join(test, Teams[ , c("teamID", "yearID", "W","L")], by = c("teamID", "yearID"), all.x=T)
test
test <- left_join(test, Teams[ , c("teamID", "yearID", "W","L")], by = c("teamID", "yearID"), all.x=T)
test
test <- test %>% mutate((win_percent = W / (W + L))
)
test
test <- test %>% mutate(win_percent = W / (W + L))
test
payroll <- left_join(payroll, Teams[ , c("teamID", "yearID", "W","L")], by = c("teamID", "yearID"), all.x=T)
payroll <- payroll %>% mutate(win_percent = W / (W + L))
payroll %>% filter(yearID == 2001) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point()
payroll %>% filter(yearID %in% 2001:2010) %>% cor(`sum(salary)`, win_percent)
r <- payroll %>% filter(yearID %in% 2001:2010) %>% cor(`sum(salary)`, payroll$win_percent) #Find the slope
r <- payroll %>% filter(yearID %in% 2001:2010) %>% cor(payroll$`sum(salary)`, payroll$win_percent) #Find the slope
payroll_2C <- payroll %>% filter(yearID %in% 2001:2010)
r <- cor(payroll_2C$`sum(salary)`, payroll_2C$win_percent) #Find the slope
mu_y <- mean(payroll_2C$win_percent) # Find the Y intercept, on non-standardized data
payroll %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y, slope = r , col="blue")
payroll_2C <- payroll %>% filter(yearID %in% 2001:2010)
r <- cor(payroll_2C$`sum(salary)`, payroll_2C$win_percent) #Find the slope
mu_y <- mean(payroll_2C$win_percent) # Find the Y intercept, on non-standardized data
payroll %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y, slope = r , col="blue")
ggplot(aes(payroll_2C$`sum(salary)`, payroll_2C$win_percent)) + geom_point() + geom_abline(intercept = mu_y, slope = r , col="blue")
ggplot(aes(payroll_2C$`sum(salary)`, payroll_2C$win_percent)) + geom_point()
payroll %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point()
payroll %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y, slope = r , col="blue")
geom_abline(intercept = mu_y_2C, slope = r_2C , col="black")
payroll_2C <- payroll %>% filter(yearID %in% 2001:2010)
r_2C <- cor(payroll_2C$`sum(salary)`, payroll_2C$win_percent) #Find the slope
mu_y_2C <- mean(payroll_2C$win_percent) # Find the Y intercept, on non-standardized data
payroll %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y_2C, slope = r_2C , col="black")
payroll_2C %>% filter(yearID %in% 2001:2010) %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y_2C, slope = r_2C , col="black")
payroll_2C %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y_2C, slope = r_2C , col="black")
mu_y_2C
r_2C
## your code here
payroll_2C <- payroll %>% filter(yearID %in% 2001:2010)
r_2C <- cor(payroll_2C$`sum(salary)`, payroll_2C$win_percent) #Find the slope
mu_y_2C <- mean(payroll_2C$win_percent) # Find the Y intercept, on non-standardized data
payroll_2C %>% ggplot(aes(`sum(salary)`, win_percent)) + geom_point() + geom_abline(intercept = mu_y_2C, slope = r_2C , col="black")
fit_2D <- payroll_2C %>%
filter(yearID >= 1999) %>%
lm(W ~ `sum(salary)`, data = .)
summary(fit_2D)
fit_2D <- payroll_2C %>%
filter(yearID >= 1999) %>%
lm(W ~ log(`sum(salary)`), data = .)
summary(fit_2D)
?lm
fit_2D
fit_2D <- payroll_2C %>%
filter(yearID >= 1999) %>%
lm(W ~ log(`sum(salary)`), data = ., ) %>% tidy(conf.int = TRUE)
summary(fit_2D)
res_2D <- tidy(fit_2D, conf.int = TRUE)
library("broom")
res_2D <- tidy(fit_2D, conf.int = TRUE)
fit_2D
fit_2D$conf.low
fit_2D$conf.low[]
fit_2D$conf.low[2]
fit_2D$conf.low[2] && fit_2D$conf.high[2]
fit_2D$conf.low[2]
fit_2D$conf.low[2] ## Confidence Interval low
fit_2D$conf.high[2] ## Confidence Interval high
print(fit_2D$conf.low[2], fit_2D$conf.high[2])
fit_2D$conf.low[2] ## Confidence Interval low
?augment.lm
View(payroll_2C)
payroll_2C %>% filter(teamID == OAK)
library(tidyr)
payroll_2C %>% filter(teamID == OAK)
payroll_2C %>% filter(teamID == "OAK")
library(dplyr)
payroll_2C %>% filter(teamID == "OAK") %>%
payroll_2C %>% filter(teamID == "OAK")
payroll_2C %>% filter(teamID == "OAK")
2E_OAK <- payroll_2C %>% filter(teamID == "OAK") %>%
OAK_2E <- payroll_2C %>% filter(teamID == "OAK") %>%
OAK_2E <- payroll_2C %>% filter(teamID == "OAK") %>%
lm(W ~ yearID, data=.)
OAK_2E <- payroll_2C %>% filter(teamID == "OAK") %>%
lm(W ~ yearID, data=.)
summarize(OAK_2E)
summarry(OAK_2E)
summary(OAK_2E)
OAK_augment <- payroll_2C %>% filter(teamID == "OAK") %>%
augment(OAK_2E, data=.)
OAK_augment
OAK_2E <- payroll %>% filter(teamID == "OAK") %>%
lm(W ~ yearID, data=.)
OAK_augment <- payroll %>% filter(teamID == "OAK") %>%
augment(OAK_2E, data=.)
OAK_augment
ggplot(OAK_augment, aes(yearID, OAK_augment$.resid)) + geom_point()
library(ggplot2)
ggplot(OAK_augment, aes(yearID, OAK_augment$.resid)) + geom_point()
ggplot(OAK_augment, aes(yearID, OAK_augment$.std.resid)) + geom_point()
ggplot(OAK_augment, aes(yearID, OAK_augment$.std.resid)) + geom_point() + geom_line(size=1)
ggplot(OAK_augment, aes(yearID, OAK_augment$.std.resid)) + geom_point() + geom_line(size=1) + geom_hline(size=0.5,aes(yintercept=0))
ggplot(OAK_augment, aes(yearID, OAK_augment$.std.resid)) + geom_point() + geom_line(size=1) + geom_hline(size=0.25,aes(yintercept=0))
BOS_2E <- payroll %>% filter(teamID == "BOS") %>%
lm(W ~ yearID, data=.)
BOS_augment <- payroll %>% filter(teamID == "BOS") %>%
augment(BOS_2E, data=.)
ggplot(BOS_augment, aes(yearID, BOS_augment$.std.resid)) + geom_point() + geom_line(size=1) + geom_hline(size=0.25,aes(yintercept=0))
OAK_plot <- ggplot(OAK_augment, aes(yearID, OAK_augment$.std.resid)) + geom_point() + geom_line(size=1) + geom_hline(size=0.25,aes(yintercept=0))
BOS_plot <- ggplot(BOS_augment, aes(yearID, BOS_augment$.std.resid)) + geom_point() + geom_line(size=1) + geom_hline(size=0.25,aes(yintercept=0))
grid.arrange(BOS_plot, OAK_plot)
library(gridExtra)
grid.arrange(BOS_plot, OAK_plot)
Teams %>% filter(yearID==2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd))
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% arrange(desc(BBstd))
View(Teams)
library(Lahman)
library(dplyr)
library(ggplot2)
library(broom)
View(Teams)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% arrange(desc(BBstd))
?rank
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select (teamID)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select(teamID)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select(teamID)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select(teamID, W)
library(dplyr)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select(teamID, W)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select("teamID", "W")
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select("teamID", "W")
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W) %>% select("teamID", "W")
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$W)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$BBstd)
Teams %>% filter(yearID==2002 ) %>% mutate(BBstd=BB/G) %>% rank(Teams$BBstd)
Teams %>% filter(yearID==2002 ) %>%  rank(Teams$W)
Teams %>% filter(yearID==2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd))
Teams %>% filter(yearID==2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, W)
Teams %>% filter(yearID==2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>% group_by(teamID)
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>% group_by(teamID) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>%
mutate(BBstd=BB/G) %>% group_by(teamID) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>%
mutate(BBstd=BB/G) %>% group_by(teamID, yearID) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID ==2002 ) %>%
mutate(BBstd=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>%
mutate(BBstd=BB/G) %>% group_by(teamID, yearID) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID >=2002 ) %>%
mutate(BB_G=BB/G) %>% group_by(teamID, yearID) %>%
arrange(desc(BB_G)) %>% select(teamID, BB_G, W)
Teams$teamID["ANA"]
Teams %>% filter(yearID >=2002 ) %>%
mutate(BB_G=BB/G) %>% group_by(teamID, yearID) %>%
arrange(desc(BB_G)) %>% select(teamID,name, BB_G, W)
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BBstd, W)
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BBstd)) %>% select(teamID, BB_G, W)
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BB_G)) %>% select(teamID, BB_G, W)
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BB_G)) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK"")
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BB_G)) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
arrange(desc(BB_G)) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
ramk(BB_G)) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>%
rank(BB_G) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>%
mutate(BB_G=BB/G) %>% rank(BB_G) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>% mutate(BB_G=BB/G) %>% rank(BB_G) %>% select(teamID, BB_G, W) %>% filter(teamID=="OAK")
Teams %>% filter(yearID ==2002 ) %>% mutate(BB_G=BB/G) %>% rank(BB_G)
Teams %>% filter(yearID ==2002 ) %>% mutate(BB_G=BB/G) %>% rank(BB_G)
Teams %>% filter(yearID ==2002 ) %>% mutate(BB_G=BB/G) %>% arrang(desc(BB_G)) %>% select(teamID, BB_G, W)
Teams %>% filter(yearID ==2002 ) %>% mutate(BB_G=BB/G) %>% arrange(desc(BB_G)) %>% select(teamID, BB_G, W)
Teams %>% filter(yearID ==2002 ) %>% mutate(Singles = sum(H - X2B - X3B - HR) / sum(PA)) %>% arrange(desc(Singles)) %>% select(teamID, name, Singles)
Teams %>% filter(yearID ==2002 ) %>% mutate(PA = AB + BB, Singles = sum(H - X2B - X3B - HR) / sum(PA)) %>% arrange(desc(Singles)) %>% select(teamID, name, Singles)
Teams %>% filter(yearID ==2002 ) %>% mutate(PA = AB + BB, XB = sum(X2B + X3B) / sum(PA)) %>% arrange(desc(XB)) %>% select(teamID, name, XB)
Teams %>% filter(yearID ==2002 ) %>% mutate(HR_G=HR/G) %>% arrange(desc(HR_G)) %>% select(teamID, name, HR_G)
Teams %>% filter(yearID ==2002 ) %>% mutate(SB_G=SB/G) %>% arrange(desc(SB_G)) %>% select(teamID, name, SB_G)
